{"version":3,"file":"component-material.esm.js","sources":["../src/constants.ts","../src/helpers/objects.ts","../src/create-material.ts","../src/component-material.tsx","../src/proxies.tsx","../src/index.tsx"],"sourcesContent":["export const VERT = 'vert'\nexport const FRAG = 'frag'\nexport const COMMON = 'common'\nexport const DEFAULT_VERT_CHUNK = 'project_vertex'\nexport const DEFAULT_FRAG_CHUNK = 'dithering_fragment'\n","export const getKeyValue = <T, K extends keyof T>(obj: T, key: K): T[K] => obj[key]\nexport const setKeyValue = <T, K extends keyof T>(obj: T, key: K, value: any): T[K] => (obj[key] = value)\n","import { MeshPhysicalMaterial, Shader } from 'three'\n\nimport { getKeyValue, setKeyValue } from './helpers/objects'\nimport { MaterialConstructor } from './types/index'\nimport { Uniforms } from './types/internal'\n\nfunction createMaterial(\n  baseMaterial: MaterialConstructor = MeshPhysicalMaterial,\n  uniforms: Uniforms = {},\n  onBeforeCompile?: (shader: Shader) => void\n) {\n  return class ComponentMaterial extends baseMaterial {\n    constructor(parameters = {}) {\n      super(parameters)\n      const entries = Object.keys(uniforms)\n      this.setValues(parameters)\n\n      entries.forEach(key => {\n        setKeyValue(this, `_${key}`, { value: uniforms[key] })\n        Object.defineProperty(this, key, {\n          get: () => this[`_${key}`].value,\n          set: v => (this[`_${key}`].value = v),\n        })\n      })\n    }\n\n    onBeforeCompile(shader: Shader) {\n      const handler = {\n        get: function (target: Shader, key: keyof Shader) {\n          return getKeyValue(target, key)\n        },\n        set: function (target: Shader, key: keyof Shader, value: any) {\n          setKeyValue(target, key, value)\n          // Accoring to ProxyHandler, the set function should return a boolean.\n          return true\n        },\n      }\n\n      const entries = Object.keys(uniforms)\n      entries.forEach(key => {\n        shader.uniforms[key] = this[`_${key}`]\n      })\n\n      const proxiedShader = new Proxy(shader, handler)\n\n      if (onBeforeCompile) {\n        onBeforeCompile(proxiedShader)\n      }\n    }\n  }\n}\n\nexport default createMaterial\n","import React, { useMemo, useRef } from 'react'\nimport { FRAG, VERT } from './constants'\nimport createMaterial from './create-material'\nimport { ChildProps, ExtensionShaderObject, ExtensionShadersObject, Uniforms } from './types/internal'\nimport { ComponentMaterialProps, GenericMaterial } from './types/index'\n\nfunction editShader(shader: string, extensions: ExtensionShaderObject) {\n  Object.entries(extensions).forEach(([key, { value, replaceChunk }]) => {\n    if (value && shader.includes(key)) {\n      shader = shader.replace(\n        `#include <${key}>`,\n        `\n          ${replaceChunk ? '' : `#include <${key}>`}\n          ${value}\n        `\n      )\n    }\n  })\n  return shader\n}\n\nfunction editShaderHead(shader: string, head: string) {\n  if (head && typeof head === 'string') {\n    shader = `\n      ${head}\n      ${shader}\n    `\n  }\n  return shader\n}\n\nfunction addUniforms(shader: string, uniforms: Uniforms) {\n  return `${Object.entries(uniforms)\n    .map(([key, { type }]) => `uniform ${type} ${key};`)\n    .join(' ')}\n    ${shader}\n  `\n}\n\nfunction addVarying(shader: string, varying: Uniforms) {\n  return `${Object.entries(varying)\n    .map(([key, { type }]) => `varying ${type} ${key};`)\n    .join(' ')}\n    ${shader}\n  `\n}\n\nexport const ComponentMaterial = React.forwardRef<GenericMaterial | undefined, ComponentMaterialProps>(\n  function ComponentMaterial({ children, varyings = {}, uniforms = {}, from, ...props }, ref) {\n    const uniformsRef = useRef(uniforms)\n    const varyingsRef = useRef(varyings)\n\n    const _uniforms = useMemo(\n      () =>\n        Object.entries(uniforms).reduce((acc: any, [key, { value }]) => {\n          acc[key] = value\n          return acc\n        }, {}),\n      [uniforms]\n    )\n\n    const shaders = useMemo<ExtensionShadersObject>(\n      () =>\n        React.Children.toArray(children).reduce(\n          (acc: any, child: any) => {\n            const shader = child?.props?.children\n\n            if (typeof shader === 'string') {\n              const replaceChunk = child?.props?.replaceChunk || false\n              const { chunkName, shaderType }: ChildProps = child.type\n\n              if ([VERT, FRAG].includes(shaderType)) {\n                if (chunkName === 'Head') {\n                  acc[shaderType].head = acc[shaderType].head.concat(`\n                  ${shader}\n                `)\n                } else {\n                  if (!acc[shaderType][chunkName]) {\n                    acc[shaderType][chunkName] = {\n                      value: '',\n                      replaceChunk: false,\n                    }\n                  }\n\n                  acc[shaderType][chunkName].replaceChunk = replaceChunk\n                  acc[shaderType][chunkName].value = acc[shaderType][chunkName].value.concat(`\n                    ${shader}\n                  `)\n                }\n              } else {\n                acc.common = acc.common.concat(`\n                ${shader}\n              `)\n              }\n            }\n\n            return acc\n          },\n          {\n            vert: {\n              head: '',\n            },\n            frag: {\n              head: '',\n            },\n            common: '',\n          }\n        ),\n      [children]\n    )\n\n    const material = useMemo(() => {\n      const { vert, frag, common } = shaders\n      const { head: vertHead, ...vertBody } = vert\n      const { head: fragHead, ...fragBody } = frag\n\n      const _material = createMaterial(from, uniformsRef.current, shader => {\n        shader.fragmentShader = editShaderHead(shader.fragmentShader, fragHead)\n        shader.vertexShader = editShaderHead(shader.vertexShader, vertHead)\n        shader.fragmentShader = editShaderHead(shader.fragmentShader, common)\n        shader.vertexShader = editShaderHead(shader.vertexShader, common)\n        shader.fragmentShader = addUniforms(shader.fragmentShader, uniformsRef.current)\n        shader.vertexShader = addUniforms(shader.vertexShader, uniformsRef.current)\n        shader.fragmentShader = addVarying(shader.fragmentShader, varyingsRef.current)\n        shader.vertexShader = addVarying(shader.vertexShader, varyingsRef.current)\n        shader.fragmentShader = editShader(shader.fragmentShader, fragBody)\n        shader.vertexShader = editShader(shader.vertexShader, vertBody)\n      })\n      return new _material()\n    }, [shaders, from])\n\n    return <primitive ref={ref} object={material} attach=\"material\" {...props} {..._uniforms} />\n  }\n)\n","import { DEFAULT_FRAG_CHUNK, DEFAULT_VERT_CHUNK, FRAG, VERT } from './constants'\nimport { ProxyProps, ProxyComponent } from './types/internal'\n\nimport { fragmentChunks, vertexChunks, commonChunks } from './generated'\n\nfunction NullFunction() {\n  return null\n}\n\ntype ShaderProxyHelper<T extends string> = {\n  [key in T]: any\n} & {\n  Body: ProxyComponent\n  Head: ProxyComponent\n}\n\n// -- VERTEX PROXY --\nconst vertHandler = {\n  get: function(_: any, name: string) {\n    const Component = function<Child extends string[] | string>({ children }: ProxyProps<Child>) {\n      return children\n    }\n    Object.defineProperty(Component, 'chunkName', { writable: true })\n    Object.defineProperty(Component, 'shaderType', { writable: true })\n    Component.chunkName = name === 'Body' ? DEFAULT_VERT_CHUNK : name\n    Component.shaderType = VERT\n    return Component\n  },\n}\nexport const vert: ShaderProxyHelper<vertexChunks | commonChunks> = new Proxy(NullFunction, vertHandler)\n\n// -- FRAGMENT PROXY --\nconst fragHandler = {\n  get: function(_: any, name: string) {\n    const Component = function<Child extends string[] | string>({ children }: ProxyProps<Child>) {\n      return children\n    }\n    Object.defineProperty(Component, 'chunkName', { writable: true })\n    Object.defineProperty(Component, 'shaderType', { writable: true })\n    Component.chunkName = name === 'Body' ? DEFAULT_FRAG_CHUNK : name\n    Component.shaderType = FRAG\n    return Component\n  },\n}\n\nexport const frag: ShaderProxyHelper<fragmentChunks | commonChunks> = new Proxy(NullFunction, fragHandler)\n\nexport function common<Child extends string[] | string>({ children }: ProxyProps<Child>) {\n  return (children as unknown) as JSX.Element\n}\n\n// TODO\n// // -- NOISE PROXY --\n// const noise = {\n//   snoise2: \"glsl-noise/simplex/2d\",\n//   snoise3: \"glsl-noise/simplex/3d\",\n//   snoise4: \"glsl-noise/simplex/4d\",\n//   cnoise2: \"glsl-noise/classic/2d\",\n//   cnoise3: \"glsl-noise/classic/3d\",\n//   cnoise4: \"glsl-noise/classic/4d\",\n//   pnoise2: \"glsl-noise/periodic/2d\",\n//   pnoise3: \"glsl-noise/periodic/3d\",\n//   pnoise4: \"glsl-noise/periodic/4d\",\n// };\n// const noiseHandler = {\n//   get: function (_, name) {\n//     const path = noise[name];\n//     if (path) {\n//       const pragma = `#pragma glslify: ${name} = require(${path})`;\n//       const Component = () => null;\n//       Object.defineProperty(Component, \"shaderType\", { writable: true });\n//       Object.defineProperty(Component, \"toolShader\", { writable: true });\n//       Component.shaderType = TOOL;\n//       Component.toolShader = pragma;\n//       return Component;\n//     }\n//     return null;\n//   },\n// };\n// export const Noise = new Proxy(() => null, noiseHandler);\n\n// // -- EASING PROXY --\n// const easing = {\n//   backInOut: \"glsl-easings/back-in-out\",\n//   backIn: \"glsl-easings/back-in\",\n//   backOut: \"glsl-easings/back-out\",\n//   bounceInOut: \"glsl-easings/bounce-in-out\",\n//   bounceIn: \"glsl-easings/bounce-in\",\n//   bounceOut: \"glsl-easings/bounce-out\",\n//   circularInOut: \"glsl-easings/circular-in-out\",\n//   circularIn: \"glsl-easings/circular-in\",\n//   circularOut: \"glsl-easings/circular-out\",\n//   cubicInOut: \"glsl-easings/cubic-in-out\",\n//   cubicIn: \"glsl-easings/cubic-in\",\n//   cubicOut: \"glsl-easings/cubic-out\",\n//   elasticInOut: \"glsl-easings/elastic-in-out\",\n//   elasticIn: \"glsl-easings/elastic-in\",\n//   elasticOut: \"glsl-easings/elastic-out\",\n//   exponentialInOut: \"glsl-easings/exponential-in-out\",\n//   exponentialIn: \"glsl-easings/exponential-in\",\n//   exponentialOut: \"glsl-easings/exponential-out\",\n//   linear: \"glsl-easings/linear\",\n//   quadraticInOut: \"glsl-easings/quadratic-in-out\",\n//   quadraticIn: \"glsl-easings/quadratic-in\",\n//   quadraticOut: \"glsl-easings/quadratic-out\",\n//   quarticInOut: \"glsl-easings/quartic-in-out\",\n//   quarticIn: \"glsl-easings/quartic-in\",\n//   quarticOut: \"glsl-easings/quartic-out\",\n//   quinticInOut: \"glsl-easings/quintic-in-out\",\n//   quinticIn: \"glsl-easings/quintic-in\",\n//   quinticOut: \"glsl-easings/quintic-out\",\n//   sineInOut: \"glsl-easings/sine-in-out\",\n//   sineIn: \"glsl-easings/sine-in\",\n//   sineOut: \"glsl-easings/sine-out\",\n// };\n// const easingHandler = {\n//   get: function (_, name) {\n//     const path = easing[name];\n//     if (path) {\n//       const pragma = `#pragma glslify: ${name} = require(${path})`;\n//       const Component = () => null;\n//       Object.defineProperty(Component, \"shaderType\", { writable: true });\n//       Object.defineProperty(Component, \"toolShader\", { writable: true });\n//       Component.shaderType = TOOL;\n//       Component.toolShader = pragma;\n//       return Component;\n//     }\n//     return null;\n//   },\n// };\n// export const Ease = new Proxy(() => null, easingHandler);\n","import { ComponentMaterial } from './component-material'\nimport { frag, vert, common } from './proxies'\n\nexport * from './types/index'\n\nexport type MT = typeof ComponentMaterial & {\n  Vert: typeof vert\n  Frag: typeof frag\n  Common: typeof common\n}\n\nconst M = ComponentMaterial\n\nObject.defineProperties(ComponentMaterial, {\n  Vert: {\n    get: (): typeof vert => vert,\n  },\n  Frag: {\n    get: (): typeof frag => frag,\n  },\n  Common: {\n    get: (): typeof common => common,\n  },\n})\n\nexport default M as MT\n"],"names":["VERT","FRAG","DEFAULT_VERT_CHUNK","DEFAULT_FRAG_CHUNK","getKeyValue","obj","key","setKeyValue","value","createMaterial","baseMaterial","uniforms","onBeforeCompile","MeshPhysicalMaterial","parameters","entries","Object","keys","setValues","forEach","defineProperty","get","set","v","shader","handler","target","proxiedShader","Proxy","editShader","extensions","replaceChunk","includes","replace","editShaderHead","head","addUniforms","map","type","join","addVarying","varying","ComponentMaterial","React","forwardRef","ref","children","varyings","from","props","uniformsRef","useRef","varyingsRef","_uniforms","useMemo","reduce","acc","shaders","Children","toArray","child","chunkName","shaderType","concat","common","vert","frag","material","vertHead","vertBody","fragHead","fragBody","_material","current","fragmentShader","vertexShader","object","attach","NullFunction","vertHandler","_","name","Component","writable","fragHandler","M","defineProperties","Vert","Frag","Common"],"mappings":"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GD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvHA,IAAMuC,CAAC,GAAG3C,iBAAV;AAEA1B,MAAM,CAACsE,gBAAP,CAAwB5C,iBAAxB,EAA2C;AACzC6C,EAAAA,IAAI,EAAE;AACJlE,IAAAA,GAAG,EAAE;AAAA,aAAmB4C,IAAnB;AAAA;AADD,GADmC;AAIzCuB,EAAAA,IAAI,EAAE;AACJnE,IAAAA,GAAG,EAAE;AAAA,aAAmB6C,IAAnB;AAAA;AADD,GAJmC;AAOzCuB,EAAAA,MAAM,EAAE;AACNpE,IAAAA,GAAG,EAAE;AAAA,aAAqB2C,MAArB;AAAA;AADC;AAPiC,CAA3C;;;;"}